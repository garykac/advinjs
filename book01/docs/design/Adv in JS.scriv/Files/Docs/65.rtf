{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs24 \cf0 Change collide() from:\
\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf0 // Return true if the 2 objects overlap.\
function collide(obj1, obj2) \{\
	if ((obj1.x - obj1.origin_x + obj1.width) <= (obj2.x - obj2.origin_x))\
		return false;\
	if ((obj1.y - obj1.origin_y + obj1.height) <= (obj2.y - obj2.origin_y))\
		return false;\
	if ((obj2.x - obj2.origin_x + obj2.width) <= (obj1.x - obj1.origin_x))\
		return false;\
	if ((obj2.y - obj2.origin_y + obj2.height) <= (obj1.y - obj1.origin_y))\
		return false;\
	\
	return true;\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
\
to:\
\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf0 // If the 2 objects overlap, return a [dx, dy, dir] array containing the x,y\
// overlap and the direction of the collision (relative to obj1).\
// Return null if they don't overlap.\
function collide(obj1, obj2) \{\
	var o1_center_x = obj1.x - obj1.origin_x + (obj1.width / 2);\
	var o1_center_y = obj1.y - obj1.origin_y + (obj1.height / 2);\
\
	var o2_center_x = obj2.x - obj2.origin_x + (obj2.width / 2);\
	var o2_center_y = obj2.y - obj2.origin_y + (obj2.height / 2);\
\
	var dx = o1_center_x - o2_center_x;\
	var dy = o1_center_y - o2_center_y;\
	\
	var half_width = (obj1.width + obj2.width) / 2;\
	var half_height = (obj1.height + obj2.height) / 2;\
	\
	// No overlap.\
	if (half_width <= Math.abs(dx) || half_height <= Math.abs(dy))\
		return null;\
\
	var overlap_x = half_width - Math.abs(dx);\
	var overlap_y = half_height - Math.abs(dy);\
	\
	if (overlap_x >= overlap_y) \{\
		if (dy > 0)\
			return [0, -overlap_y, "top"];\
		else\
			return [0, overlap_y, "bottom"];\
	\} else \{\
		if (dx > 0)\
			return [-overlap_x, 0, "left"];\
		else\
			return [overlap_x, 0, "right"];\
	\}\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
\
It now returns an array instead of true/false. Fortunately, JavaScript considers a null array to be false and any valid array to be true.\
\
run the code now and everything should still work like before, but now we have the information we need to make the platforms behave properly.\
\
You earned the "Collision II - Advanced" badge!\
GOTO 073\
\
}