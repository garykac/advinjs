{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red105\green105\blue105;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs24 \cf0 \
To connect the levels, we need to modify the goal so that it indicates the next level to go to.\
\
Since we don't have a "game over" level, we'll (temporarily) connect the last level back to the first.\
\
YOU: doesn't that mean that the game will never yet.\
\
B: Yes, but it's only temporary. We'll be adding a proper ending later.\
\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf0 \strike \strikec0 function create_goal(x, y) \{\

\f2\b \strike0\striked0 function create_goal(x, y, next_level) \{\

\f1\b0 \cf2 	var goal = \{\};\
	goal.x = x;\
	goal.y = y;\
	goal.width = 20;\
	goal.height = 20;\
	goal.origin_x = goal.width / 2;\
	goal.origin_y = goal.height;\

\f2\b \cf0 	goal.next_level = next_level;\

\f1\b0 \cf2 	return goal;\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
and update all the calls:\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function init_level1() \{\
	...\
\cf0 \strike \strikec0 	level.goal = create_goal(500, 360);\

\f2\b \strike0\striked0 	level.goal = create_goal(500, 360, 1);\

\f1\b0 \cf2 	...\
\}\
\
function init_level2() \{\
	...\
\cf0 \strike \strikec0 	level.goal = create_goal(500, 360);\

\f2\b \strike0\striked0 	level.goal = create_goal(500, 360, 2);\

\f1\b0 \cf2 	...\
\}\
\
function init_level3() \{\
	...\
\cf0 \strike \strikec0 	level.goal = create_goal(500, 360);\

\f2\b \strike0\striked0 	level.goal = create_goal(500, 360, 0);\

\f1\b0 \cf2 	...\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
\
level1 is at index #0 (_level[0]) and its goal points to level2 (@ index #1)\
fd\
\
Add start_level:\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function create_goal(x, y, next_level) \{\
	...\
\}\
\

\f2\b \cf0 function start_level(level_id) \{\
	_game.current_level = level_id;\
\
	var level = _levels[level_id];\
	_player.x = level.player_start_x;\
	_player.y = level.player_start_y;\
	_player.velocity_x = 0;\
	_player.velocity_y = 0;\
\}\

\f1\b0 \cf2 \
// Erase the stage and draw all the objects.\
function draw() \{\
	...\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
When we start a level, we move the player to the appropriate starting location and remove any velocity they may have from the previous level.\
ffda\
\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function check_goal_collisions() \{\
	var level = _levels[_game.current_level];\
	var goal = level.goal;\
	if (collide(goal, _player)) \{\
\cf0 \strike \strikec0 		_game.game_over = true;\
		_game.game_win = true;\

\f2\b \strike0\striked0 		start_level(goal.next_level);\

\f1\b0 \cf2 	\}\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
Wait, now there's no way to win.\
\
We should also call this after we finish initializing so that the game starts at the correct level.\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function handle_load(event) \{\
	init();\

\f2\b \cf0 	start_level(0);\

\f1\b0 \cf2 	requestAnimationFrame(update_world);\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
don't we already do this in init_game()\
\
\
Now that we init the player at the start of each level, we no longer need to set x and y in init_player\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function init_player() \{\

\f2\b \cf0 	// Player x,y are initialized by the level.\

\f1\b0 \strike \strikec0 	_player.x = 20;\

\f2\b \strike0\striked0 	_player.x = 0;\

\f1\b0 \strike \strikec0 	_player.y = _game.height - 40;\

\f2\b \strike0\striked0 	_player.y = 0;\

\f1\b0 \cf2 \
	_player.width = 20;\
	_player.height = 20;\
	...\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
\
fdasfd\
\
\
RUn and verify\
\
\
GOTO 100\
}