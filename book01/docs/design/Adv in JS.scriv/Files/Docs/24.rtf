{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red105\green105\blue105;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs24 \cf0 BALTHAZAR: Where do you think we should start?\
\
YOU: Since it's a platformer, adding platforms seems like an obvious place to start.\
\
BALTHAZAR: How do you think we can do that?\
\
YOU: By drawing a big rectangle on the screen.\
\
BALTHAZAR: Where?\
\
YOU: At the bottom.\
\
BALTHAZAR: No, I mean where in the code do you do that?\
\
YOU: Oh. Probably in the 
\f1 draw()
\f0  function.\
\
BALTHAZAR: Good. But rather than adding it directly to the 
\f1 draw()
\f0  function, we should add a new 
\f1 draw_platforms()
\f0  function and call that from 
\f1 draw()
\f0  \'97 just like we do for 
\f1 draw_player()
\f0 .\
\
YOU: You mean "draw platforms" with an ess? But we're only drawing one platform.\
\
BALTHAZAR: True, but we'll be adding more platforms soon enough, and we might as well give the function its proper name now so that we don't have to rename it later.\
\
YOU: OK. 
\i (Whatever)
\i0 \
\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function init_player() \{\
	...\
\}\
\

\f2\b \cf0 function create_platform(x, y, width, height) \{\
	var p = \{\};\
	p.x = x;\
	p.y = y;\
	p.width = width;\
	p.height = height;\
	p.origin_x = 0;\
	p.origin_y = 0;	\
	return p;\
\}\

\f1\b0 \cf2 \
function draw() \{\
	...\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
\
and in init_game()\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 	// The keymap keeps track of which keys are currently being pressed.\
	_game.keymap = \{\};\
\

\f2\b \cf0 	// Game state.\
	_game.platform = create_platform(0, 360, _game.width, 40);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\b0 \cf0 \
\
\
BALTHAZAR: First you should modify the 
\f1 draw()
\f0  function to call 
\f1 draw_platforms()
\f0  between the calls to 
\f1 erase()
\f0  and 
\f1 draw_player()
\f0 :\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 function draw() \{\
	var canvas = document.getElementById("stage");\
	var ctx = canvas.getContext("2d");\
\
\cf0 	\cf2 erase(ctx);\cf0 \
	
\f2\b draw_platforms(ctx);
\f1\b0 \
	\cf2 draw_player(ctx);\
\}\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \
BALTHAZAR: And then add the 
\f1 draw_platforms()
\f0  function just after the 
\f1 erase()
\f0  function:\
\
\pard\tx1260\tx1860\tx2420\tx3020\tx3560\tx4140\li700\sl288\slmult1\pardirnatural

\f1 \cf2 // Erase the stage and draw all the objects.\
function erase(ctx) \{\
	...\
\}\
\

\f2\b \cf0 // Draw the platforms.\
function draw_platforms(ctx) \{\
	var platform = _game.platform;\
	ctx.fillStyle = "rgb(153, 102, 51)";\
	ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\
\}\
\

\f1\b0 \cf2 // Draw the player.\
function draw_player(ctx) \{\
	...\
\}
\f2\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\b0 \cf0 \
BALTHAZAR: Note that we use the canvas width here. This is so that we can resize the canvas and have the platform stretch to match the width of the canvas.\
\
YOU: Why didn't we do that with the height. We could have used _game.height - 40 instead of 360.\
\
BALTHAZAR: That's an excellent observation. The reason why we use 360 explicitly is because once we start adding more platforms, we need the main platform to stay at 360 even if we make the stage taller. *** We could make all the platforms relative to the bottom of the stage, but that becomes unwieldy.  *** It'll also make some of the following code easier to read. ***\
\
YOU: Oh. OK. So I should try this out now?\
\
BALTHAZAR: Yes, type in the code, try it out and see what happens.\
\
RUN your code in a browser and verify that it loads without errors.\
IF it works, THEN gain the "Platform I" badge and GOTO 004\
}